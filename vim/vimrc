" set shell=/bin/bash


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" 
" Plugin start
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible              " be iMproved, required
filetype off                  " required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
"Plugin 'git://git.wincent.com/command-t.git'
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Plugin 'ascenator/L9', {'name': 'newL9'}
" 이부분에 플러그인 설치할 부분을 넣어주면 된다.
"Plugin 'xolox/vim-easytags'
"Plugin 'xolox/vim-misc'

" Plugin 'gmarik/Vundle.vim'

" vim interface
Plugin 'majutsushi/tagbar'
Plugin 'scrooloose/nerdtree'
" Plugin 'nathanaelkane/vim-indent-guides'


" git
Plugin 'airblade/vim-gitgutter' " vim with git status(added, modified, and removed lines)
Plugin 'tpope/vim-fugitive' " vim with git command(e.g., Gdiff)
" Plugin 'vim-airline/vim-airline' " vim status bar
" Plugin 'vim-airline/vim-airline-themes'
" Plugin 'blueyed/vim-diminactive'

" Markdown preview
Plugin 'JamshedVesuna/vim-markdown-preview'

" All of your Plugins must be added before the following line
call vundle#end()            " required

" 플러그인 설정 관련 부분은 vundle#end 밑에줄에 넣어주면 된다.
filetype plugin indent on    " required
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" 
" Plugin end
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


" vim runtime configuration file
syntax on


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" 
" ctags settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set tag=./tags;/
" easy-tag " tags를 비동기로 불러와준다. (필수) tag사이즈가 커지게 되면 vim이 블록되는 시간이 길어져서 답답하다 
let g:easytags_async=1
" highlight를 켜면 좋지만 이것도 속도가 느려진다. 
let g:easytags_auto_highlight = 0
" struct의 멤버변수들도 추적이 된다. 
let g:easytags_include_members = 1
" 현재 프로젝트에서 쓰는 tags파일을 우선 로드하고 없을 경우 global tags를 로드한다. 
let g:easytags_dynamic_files = 1


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" 
" vim default env
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set ai
set cindent
set ts=8 sw=4 sts=4
set smartindent
set nu
set hlsearch
set cursorline

" markdown preview
let vim_markdown_preview_github = 1

" macbook enable backspace 
set backspace=indent,eol,start

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" 
" macro
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! LoadCscope()
    let db = findfile("cscope.out", ".;")
    if (!empty(db))
    let path = strpart(db, 0, match(db, "/cscope.out$"))
    set nocscopeverbose " suppress 'duplicate connection' error
    exe "cs add " . db . " " . path
    set cscopeverbose
    endif
    endfunction
call LoadCscope()


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" 
" mapping
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" compile
nmap <F5> :w<Enter>:! g++ -std=c++17 % -o %<<CR>
" run
nmap <F6> :!./%<<Enter>

nmap <F7> :NERDTreeToggle<CR>
nmap <F8> :TagbarToggle<CR>
